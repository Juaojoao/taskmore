version: '3.8'

services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: nextjs-postgres
    restart: always
    environment:
      POSTGRES_DB: estudonext_db
      POSTGRES_USER: estudonext_user
      POSTGRES_PASSWORD: estudonext_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      # Volume nomeado para persistência dos dados
      - postgres_data:/var/lib/postgresql/data
      # Script de inicialização (opcional)
      - ./docker/init-db:/docker-entrypoint-initdb.d
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U estudonext_user -d estudonext_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Aplicação Next.js
  nextjs-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nextjs-app
    restart: always
    ports:
      - "3060:3060"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://estudonext_user:estudonext_password@postgres:5432/estudonext_db
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      # Volume para desenvolvimento (hot reload)
      - .:/app
      - /app/node_modules
      - /app/.next
    networks:
      - app-network

  # Adminer para gerenciar o banco (opcional)
  adminer:
    image: adminer:latest
    container_name: nextjs-adminer
    restart: always
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres
    networks:
      - app-network

# Volumes nomeados para persistência
volumes:
  postgres_data:
    driver: local

# Rede personalizada
networks:
  app-network:
    driver: bridge
